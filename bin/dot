#!/bin/sh
#
# dot
#
# `dot` handles installation, updates, things like that. Run it periodically
# to make sure you're on the latest and greatest.

set -e

force=false
freshInstall=false
parentDirectory="$(cd "$(dirname "$0")" && pwd -P)"
dotfilesDirectory="$(cd "$(dirname "${parentDirectory}")" && pwd -P)"

displayUsageAndExit() {
  echo "dot -- dotfiles management"
  echo ""
  echo "Usage: dot [options]"
  echo ""
  echo "Options:"
  echo "  -f, --force   Force initialization (not skipping setup)"
  echo "  -e, --edit    Open dotfiles directory for editing"
  echo "  -h, --help    Show this help message and exit"
  exit
}

while test $# -gt 0; do
  case "$1" in
  "-h" | "--help")
    displayUsageAndExit
    ;;
  "-e" | "--edit")
    exec "${EDITOR}" "${dotfilesDirectory}"
    exit
    ;;
  "-f" | "--force")
    force=true
    ;;
  *)
    echo "Invalid option: $1"
    displayUsageAndExit
    ;;
  esac
  shift
done

if [ ! -f "${dotfilesDirectory}/dotfiles.initialized" ] || [ ${force} = "true" ]; then
  freshInstall=true
fi
echo "freshInstall: ${freshInstall}"

export DOTZSH=$HOME/.dotfiles

# Update dotfiles themselves
echo "› git pull"
git -C $DOTZSH pull

# Set macOS hostname
echo "› setup-hostname"
$DOTZSH/macos/set-hostname.sh

if [ ${freshInstall} = 'true' ]; then
  # Install homebrew
  echo "› install homebrew"
  $DOTZSH/homebrew/ensure-homebrew-installed.sh 2>&1

  # Set macOS defaults
  echo "› set mac defaults"
  $DOTZSH/macos/set-defaults.sh
fi

# Upgrade homebrew
echo "› brew update"
brew update

echo "› brew upgrade"
brew upgrade

echo "› brew bundle"
brew bundle --file $DOTZSH/Brewfile

if [ ${freshInstall} = 'true' ]; then
  # Install software
  echo "› script/install"
  $DOTZSH/script/install
  touch "${dotfilesDirectory}/dotfiles.initialized"
fi
